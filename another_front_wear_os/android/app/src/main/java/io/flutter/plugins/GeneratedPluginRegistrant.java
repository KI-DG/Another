package io.flutter.plugins;

import androidx.annotation.Keep;
import androidx.annotation.NonNull;
import io.flutter.Log;

import io.flutter.embedding.engine.FlutterEngine;

/**
 * Generated file. Do not edit.
 * This file is generated by the Flutter tool based on the
 * plugins that support the Android platform.
 */
@Keep
public final class GeneratedPluginRegistrant {
  private static final String TAG = "GeneratedPluginRegistrant";
  public static void registerWith(@NonNull FlutterEngine flutterEngine) {
    try {
      flutterEngine.getPlugins().add(new com.boskokg.flutter_blue_plus.FlutterBluePlusPlugin());
    } catch(Exception e) {
      Log.e(TAG, "Error registering plugin flutter_blue_plus, com.boskokg.flutter_blue_plus.FlutterBluePlusPlugin", e);
    }
    try {
      flutterEngine.getPlugins().add(new com.sstonn.flutter_wear_os_connectivity.FlutterWearOsConnectivityPlugin());
    } catch(Exception e) {
      Log.e(TAG, "Error registering plugin flutter_wear_os_connectivity, com.sstonn.flutter_wear_os_connectivity.FlutterWearOsConnectivityPlugin", e);
    }
    try {
      flutterEngine.getPlugins().add(new com.litedevs.is_wear.IsWearPlugin());
    } catch(Exception e) {
      Log.e(TAG, "Error registering plugin is_wear, com.litedevs.is_wear.IsWearPlugin", e);
    }
    try {
      flutterEngine.getPlugins().add(new dev.rexios.watch_connectivity.WatchConnectivityPlugin());
    } catch(Exception e) {
      Log.e(TAG, "Error registering plugin watch_connectivity, dev.rexios.watch_connectivity.WatchConnectivityPlugin", e);
    }
    try {
      flutterEngine.getPlugins().add(new com.samsung.wearable_rotary.WearableRotaryPlugin());
    } catch(Exception e) {
      Log.e(TAG, "Error registering plugin wearable_rotary, com.samsung.wearable_rotary.WearableRotaryPlugin", e);
    }
  }
}
